{"version":3,"sources":["Header.js","index.js"],"names":["Header","react_default","a","createElement","role","className","React","Component","ReactDOM","render","Header_Header","document","getElementById","Square","props","onClick","value","Board","i","_this","this","squares","renderSquare","Game","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","_this3","current","winner","moves","map","move","desc","key","jumpTo","src_Header","src_Board","handleClick","lines","_lines$i","slicedToArray","b","c","src_Game"],"mappings":"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","file":"static/js/main.b25c658e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Header extends React.Component {\n    render(){\n        return (\n            <header role=\"banner\" className=\"heading\">\n                <h1>X-O</h1>\n                <p>A tic-tac-toe game</p>\n            </header>\n        );\n    }\n}\n\nReactDOM.render(\n    <Header />,\n    document.getElementById('root')\n);\n\nexport default Header;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Header from './Header.js';\n\n  function Square(props) {\n      return (\n          <button className=\"square\" onClick={props.onClick}>\n          {props.value}\n          </button>\n      )\n  }\n  \n  class Board extends React.Component {\n\n    renderSquare(i) {\n      return (\n      <Square \n        value={this.props.squares[i]} \n        onClick= {()=> this.props.onClick(i)}\n        />\n      );\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null),\n        }],\n        stepNumber: 0,\n        xIsNext: true,\n      };\n    }\n\n    handleClick(i) {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n\n      if (calculateWinner(squares) || squares[i]){\n        return;\n      }\n\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({ \n        history: history.concat([{\n          squares: squares,\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n      });\n  }\n\n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0\n      });\n    }\n\n    render() {\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n\n      const moves = history.map((step, move) => {\n        const desc = move ? \n        'Go to move #' + move :\n        'Go to game start';\n        return (\n          <li key ={move}>\n            <button className = \"go-to-btn\" onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n      });\n\n      let status;\n      if (winner){\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n\n      return (\n      <div className=\"wrapper\">\n          <Header/>\n        <div className=\"game\" role=\"main\">\n          <div className=\"game-board\">\n            <Board \n            squares = {current.squares} \n            onClick={(i)=> this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n\n  function calculateWinner(squares){\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n   ];\n\n   for (let i = 0; i < lines.length; i++) {\n     const [a, b, c] = lines[i];\n     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n       return squares[a];\n     }\n   }\n   return null;\n  }\n\n"],"sourceRoot":""}